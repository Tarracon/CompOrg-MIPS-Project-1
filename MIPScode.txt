.text 
main: #Code for MIPS follows this line
  li $v0, 11 #Load command to print characters in v0 register
  la $a0, 64 #Load character '@' into 4 register
  syscall #Call for computer to print character loaded in a0
  sub $v0, 10 #Subract from v0 to get 1, the command to print integers
  sub $a0, 64 # subtract from a0 to print 0
  syscall #Call for system to print int stored in a0
  addi $a0, 2 #Make 4 register store 2
	syscall #Call to print int stored in a0
	addi $a0, 6 #Make 4th register store 8 by adding 6
	syscall 
	sub $a0, 5 #Make 4th register store 3 by adding 5
	syscall
	addi $a0, 4 #Make 4th register store 7 by adding 4
	syscall
	sub $a0, 3 #Make 4th register store 4
  	syscall
	syscall #Print stored in a0 twice
	addi $a0, 4 #Make 4th register store 8
	syscall
	addi $v0, 10 #Print out char again
	addi $a0, 2 #Print out new line (ASCII 10)
	syscall
	addi $a0, 56 #Store 'B'
	syscall
	addi $a0, 42 #Store 'l'
	syscall
	sub $a0, 11 #Store 'a'
	syscall
	addi $a0, 2 #Store 'c'
	syscall
	addi $a0, 8 #Store 'k'
	syscall
	addi $a0, 12 #Store 'w'
	syscall
	sub $a0, 18 #Store 'e'
	syscall
	addi $a0, 7 #Store 'l'
	syscall
	syscall
	sub $a0, 64 #Store ','
	syscall
	sub $a0, 12 #Store space ' ' 
	syscall
	addi $a0, 52 #Store 'T'
	syscall
	addi $a0, 17 #Store 'e'
	syscall
	addi $a0, 13 #Store 'r'
	syscall
	sub $a0, 13 #Restore 'e'
	syscall
	addi $a0, 7 #Store 'l'
	syscall
	sub $a0, 98 #Start new line
	syscall
	sub $v0, 1 #Store exit commmand in v0
	syscall
